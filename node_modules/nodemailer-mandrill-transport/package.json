{
  "name": "nodemailer-mandrill-transport",
  "version": "1.1.0",
  "description": "Mandrill transport for Nodemailer",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:RebelMail/nodemailer-mandrill-transport.git"
  },
  "keywords": [
    "nodemailer",
    "mandrill"
  ],
  "author": {
    "name": "RebelMail"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/RebelMail/nodemailer-mandrill-transport/issues"
  },
  "homepage": "https://github.com/RebelMail/nodemailer-mandrill-transport",
  "dependencies": {
    "addressparser": "^1.0.1",
    "extend": "^3.0.0",
    "mandrill-api": "^1.0.45"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^2.4.5",
    "sinon": "^1.17.3"
  },
  "readme": "# nodemailer-mandrill-transport\n\nA Mandrill transport for Nodemailer.\n\n[![Build Status](https://travis-ci.org/Rebelmail/nodemailer-mandrill-transport.svg?branch=sm-readme)](https://travis-ci.org/Rebelmail/nodemailer-mandrill-transport)\n[![NPM version](https://badge.fury.io/js/nodemailer-mandrill-transport.png)](http://badge.fury.io/js/nodemailer-mandrill-transport)\n\n## Example\n\n```javascript\n'use strict';\n\nvar nodemailer = require('nodemailer');\n\nvar mandrillTransport = require('nodemailer-mandrill-transport');\n\nvar transport = nodemailer.createTransport(mandrillTransport({\n  auth: {\n    apiKey: 'key'\n  }\n}));\n\ntransport.sendMail({\n  from: 'sender@example.com',\n  to: 'user@example.com',\n  subject: 'Hello',\n  html: '<p>How are you?</p>'\n}, function(err, info) {\n  if (err) {\n    console.error(err);\n  } else {\n    console.log(info);\n  }\n});\n```\n\n## Using Mandrill API options\n\nIt is possible to use any Messages Send Mandrill API option by passing it into\nthe `mandrillOptions` option. These will be deeply merged over the API call this\ntransport builds for you. For example, this transport enables the `async` option\nby default. To disable this,\n\n```javascript\ntransport.sendMail({\n  mandrillOptions: {\n    async: false\n  }\n}, /* ... */);\n```\n\n## Sending Images to Mandrill\n\nTo send images as attachments:\n\n```javascript\ntransport.sendMail({\n  mandrillOptions: {\n    images: [\n      'type': 'image/png',\n      'name': 'IMAGECID',\n      'content': 'ZXhhbXBsZSBmaWxl',\n    ],\n  }\n}, /* ... */);\n```\n\n**name**: image cid:\n\nReference your attached image in your HTML:\n\n```html\n<img src=\"IMAGECID\">\n```\n\nMake sure to use unique cids for your images!\n\n**content**: a base64 representation of your image.\n\n```javascript\nvar fs = require('fs');\nvar imgBuff = fs.readFileSync('path/to/file');\n\nimgBuff.toString('base64');\n```\n\n## Using Mandrill Templates\n\nTo send email using templates stored on Mandrill:\n\n```javascript\ntransport.sendMail({\n  mandrillOptions: {\n    template_name: 'MANDRILL_TEMPLATE_SLUG'\n  }\n}, /* ... */);\n```\n",
  "readmeFilename": "README.md",
  "_id": "nodemailer-mandrill-transport@1.1.0",
  "dist": {
    "shasum": "1f0fe9e3d27986500ec6c6d34f3e910198af6a54"
  },
  "_from": "nodemailer-mandrill-transport@1.1.0",
  "_resolved": "https://registry.npmjs.org/nodemailer-mandrill-transport/-/nodemailer-mandrill-transport-1.1.0.tgz"
}
